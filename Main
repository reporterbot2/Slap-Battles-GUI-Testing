local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local MainGui = Instance.new("ScreenGui", PlayerGui)
MainGui.Name = "MainGui"
MainGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local Frame = Instance.new("Frame", MainGui)
Frame.Name = "Frame"
Frame.Position = UDim2.new(0.139116, 0, 0.363086, 0)
Frame.Size = UDim2.new(0, 306, 0, 274)
Frame.BackgroundColor3 = Color3.fromRGB(88, 88, 88)
Frame.BorderSizePixel = 0

Instance.new("UICorner", Frame)
Instance.new("UIStroke", Frame).Thickness = 3.2

local thing = Instance.new("TextLabel", Frame)
thing.Position = UDim2.new(0.173, 0, 0, 0)
thing.Size = UDim2.new(0, 200, 0, 38)
thing.BackgroundTransparency = 1
thing.Text = "Slap battles GUI"
thing.TextColor3 = Color3.new(0, 0, 0)
thing.TextSize = 14
thing.Font = Enum.Font.SourceSans
thing.TextScaled = true
thing.TextWrapped = true

local function createButton(name, posY, text)
	local btn = Instance.new("TextButton", Frame)
	btn.Name = name
	btn.Position = UDim2.new(0.045, 0, posY, 0)
	btn.Size = UDim2.new(0, 280, 0, 33)
	btn.BackgroundColor3 = Color3.new(1, 1, 1)
	btn.BackgroundTransparency = 0.05
	btn.Text = text .. ": OFF"
	btn.TextColor3 = Color3.new(0, 0, 0)
	btn.TextSize = 14
	btn.Font = Enum.Font.SourceSans
	btn.TextScaled = true
	btn.TextWrapped = true
	Instance.new("UICorner", btn)
	return btn
end

local defaultAuraBtn = createButton("defaultaura", 0.171, "Slap aura (default glove)")
local extendedAuraBtn = createButton("extendedaura", 0.318, "Slap aura (extended glove)")
local killstreakAuraBtn = createButton("killstreakaura", 0.471, "Killstreak slap aura")
local antivoidBtn = createButton("antivoid", 0.620, "Anti void")

-- Dragging for Frame (PC & Mobile)
local dragging, dragInput, dragStart, startPos
Frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.Touch then
		dragging = true
		dragStart = input.Position
		startPos = Frame.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

Frame.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - dragStart
		Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

-- Aura logic toggles
local auraThreads = {
	default = nil,
	extended = nil,
	killstreak = nil,
}
local antiVoidPart = nil

defaultAuraBtn.MouseButton1Click:Connect(function()
	if auraThreads.default then
		auraThreads.default:Disconnect()
		auraThreads.default = nil
		defaultAuraBtn.Text = "Slap aura (default glove): OFF"
	else
		defaultAuraBtn.Text = "Slap aura (default glove): ON"
		auraThreads.default = game:GetService("RunService").Heartbeat:Connect(function()
			local closest, dist = nil, math.huge
			for _, player in pairs(Players:GetPlayers()) do
				if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
					local d = (Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
					if d < dist then
						dist = d
						closest = player
					end
				end
			end
			if closest and closest.Character and closest.Character:FindFirstChild("Right Arm") then
				ReplicatedStorage:WaitForChild("b"):FireServer(closest.Character["Right Arm"])
			end
		end)
	end
end)

extendedAuraBtn.MouseButton1Click:Connect(function()
	if auraThreads.extended then
		auraThreads.extended:Disconnect()
		auraThreads.extended = nil
		extendedAuraBtn.Text = "Slap aura (extended glove): OFF"
	else
		extendedAuraBtn.Text = "Slap aura (extended glove): ON"
		auraThreads.extended = game:GetService("RunService").Heartbeat:Connect(function()
			local closest, dist = nil, math.huge
			for _, player in pairs(Players:GetPlayers()) do
				if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
					local d = (player.Character.Head.Position - Character.Head.Position).Magnitude
					if d < dist then
						dist = d
						closest = player
					end
				end
			end
			if closest and closest.Character and closest.Character:FindFirstChild("Head") then
				ReplicatedStorage:WaitForChild("b"):FireServer(closest.Character.Head)
			end
		end)
	end
end)

killstreakAuraBtn.MouseButton1Click:Connect(function()
	if auraThreads.killstreak then
		auraThreads.killstreak:Disconnect()
		auraThreads.killstreak = nil
		killstreakAuraBtn.Text = "Killstreak slap aura: OFF"
	else
		killstreakAuraBtn.Text = "Killstreak slap aura: ON"
		auraThreads.killstreak = game:GetService("RunService").Heartbeat:Connect(function()
			local closest, dist = nil, math.huge
			for _, player in pairs(Players:GetPlayers()) do
				if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Right Arm") and Character:FindFirstChild("Head") then
					local d = (player.Character["Right Arm"].Position - Character.Head.Position).Magnitude
					if d < dist then
						dist = d
						closest = player
					end
				end
			end
			if closest and closest.Character and closest.Character:FindFirstChild("Right Arm") then
				ReplicatedStorage:WaitForChild("KSHit"):FireServer(closest.Character["Right Arm"])
			end
		end)
	end
end)

antivoidBtn.MouseButton1Click:Connect(function()
	if antiVoidPart then
		antiVoidPart:Destroy()
		antiVoidPart = nil
		antivoidBtn.Text = "Anti void: OFF"
	else
		antiVoidPart = Instance.new("Part")
		antiVoidPart.Anchored = true
		antiVoidPart.Size = Vector3.new(2040, 3, 2040)
		antiVoidPart.Position = Vector3.new(40.43, -12.81, 107.87)
		antiVoidPart.Transparency = 0.5
		antiVoidPart.CanCollide = true
		antiVoidPart.Name = "AntiVoidPart"
		antiVoidPart.Parent = workspace
		antivoidBtn.Text = "Anti void: ON"
	end
end)
